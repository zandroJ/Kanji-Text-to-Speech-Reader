@import url('https://fonts.cdnfonts.com/css/jetbrains-mono-2');

:root {
  --font-family: "JetBrains Mono", monospace;
  --line-height: 1.20rem;
  --border-thickness: 2px;
  --text-color: #000;
  --text-color-alt: #666;
  --background-color: #fff;
  --background-color-alt: #eee;

  --font-weight-normal: 500;
  --font-weight-medium: 600;
  --font-weight-bold: 800;

  font-family: var(--font-family);
  font-optical-sizing: auto;
  font-weight: var(--font-weight-normal);
  font-style: normal;
  font-variant-numeric: tabular-nums lining-nums;
  font-size: 16px;
}

@media (prefers-color-scheme: dark) {
  :root {
    --text-color: #fff;
    --text-color-alt: #aaa;
    --background-color: #000;
    --background-color-alt: #111;
  }
}

* {
  box-sizing: border-box;
}


* + * {
  margin-top: var(--line-height);
}

html {
  display: flex;
  width: 100%;
  margin: 0;
  padding: 0;
  flex-direction: column;
  align-items: center;
  background: var(--background-color);
  color: var(--text-color);
}

body {
  position: relative;
  width: 100%;
  margin: 0;
  padding: var(--line-height) 2ch;
  max-width: calc(min(80ch, round(down, 100%, 1ch)));
  line-height: var(--line-height);
  overflow-x: hidden;
}

@media screen and (max-width: 480px) {
  :root {
    font-size: 14px;
  }
  body {
    padding: var(--line-height) 1ch;
  }
}

h1, h2, h3, h4, h5, h6 {
  font-weight: var(--font-weight-bold);
  margin: calc(var(--line-height) * 2) 0 var(--line-height);
  line-height: var(--line-height);
}

h1 {
  font-size: 2rem;
  line-height: calc(2 * var(--line-height));
  margin-bottom: calc(var(--line-height) * 2);
  text-transform: uppercase;
}
h2 {
  font-size: 1rem;
  text-transform: uppercase;
}

hr {
  position: relative;
  display: block;
  height: var(--line-height);
  margin: calc(var(--line-height) * 1.5) 0;
  border: none;
  color: var(--text-color);
}
hr:after {
  display: block;
  content: "";
  position: absolute;
  top: calc(var(--line-height) / 2 - var(--border-thickness));
  left: 0;
  width: 100%;
  border-top: calc(var(--border-thickness) * 3) double var(--text-color);
  height: 0;
}

a {
  text-decoration-thickness: var(--border-thickness);
}

a:link, a:visited {
  color: var(--text-color);
}

p {
  margin-bottom: var(--line-height);
}

strong {
  font-weight: var(--font-weight-bold);
}
em {
  font-style: italic;
}

sub {
  position: relative;
  display: inline-block;
  margin: 0;
  vertical-align: sub;
  line-height: 0;
  width: calc(1ch / 0.75);
  font-size: .75rem;
}

table {
  position: relative;
  top: calc(var(--line-height) / 2);
  width: calc(round(down, 100%, 1ch));
  border-collapse: collapse;
  margin: 0 0 calc(var(--line-height) * 2);
}

th, td {
  border: var(--border-thickness) solid var(--text-color);
  padding: 
    calc((var(--line-height) / 2))
    calc(1ch - var(--border-thickness) / 2)
    calc((var(--line-height) / 2) - (var(--border-thickness)))
  ;
  line-height: var(--line-height);
  vertical-align: top;
  text-align: left;
}
table tbody tr:first-child > * {
  padding-top: calc((var(--line-height) / 2) - var(--border-thickness));
}


th {
  font-weight: 700;
}
.width-min {
  width: 0%;
}
.width-auto {
  width: 100%;
}

.header {
  margin-bottom: calc(var(--line-height) * 2);
}
.header h1 {
  margin: 0;
}
.header tr td:last-child {
  text-align: right;
}

p {
  word-break: break-word;
  word-wrap: break-word;
  hyphens: auto;
}

img, video {
  display: block;
  width: 100%;
  object-fit: contain;
  overflow: hidden;
}
img {
  font-style: italic;
  color: var(--text-color-alt);
}



/* Smooth dropdown animation */
details {
  border: var(--border-thickness) solid var(--text-color);
  padding: calc(var(--line-height) - var(--border-thickness)) 1ch;
  margin-bottom: var(--line-height);
  overflow: hidden;
  max-height: 3rem; /* Closed state height */
  transition: max-height 0.4s ease-out, padding 0.4s ease-out;
}

/* Open state */
details[open] {
  max-height: 3000px; /* Must be larger than the content height */
  transition: max-height 0.4s ease-in, padding 0.4s ease-in;
}

/* Custom Arrow */
summary {
  list-style: none;
  cursor: pointer;
  position: relative;
  padding-right: 2ch;
}

summary::before {
  content: "▶";
  position: absolute;
  right: 0;
  transition: transform 0.3s ease-out;
}

details[open] summary::before {
  content: "▼";
  transform: rotate(90deg);
  transition: transform 0.3s ease-in;
}

/* Content Animation */
.project-content {
  opacity: 0;
  transform: translateY(-10px);
  transition: opacity 0.3s ease-out, transform 0.3s ease-out;
}

details[open] .project-content {
  opacity: 1;
  transform: translateY(0);
}

/* Closing Animation */
details.closing {
  max-height: 3rem; /* Closed state */
  overflow: hidden;
  transition: max-height 0.4s ease-out, padding 0.4s ease-out;
}

details.closing .project-content {
  opacity: 0;
  transform: translateY(-10px);
  transition: opacity 0.3s ease-out, transform 0.3s ease-out;
}


pre {
  white-space: pre;
  overflow-x: auto;
  margin: var(--line-height) 0;
  overflow-y: hidden;
}
figure pre {
  margin: 0;
}

pre, code {
  font-family: var(--font-family);
}

code {
  font-weight: var(--font-weight-medium);
}

figure {
  margin: calc(var(--line-height) * 2) 3ch;
  overflow-x: auto;
  overflow-y: hidden;
}

figcaption {
  display: block;
  font-style: italic;
  margin-top: var(--line-height);
}

ul, ol {
  padding: 0;
  margin: 0 0 var(--line-height);
}

ul {
  list-style-type: square;
  padding: 0 0 0 2ch;
}
ol {
  list-style-type: none;
  counter-reset: item;
  padding: 0;
}
ol ul,
ol ol,
ul ol,
ul ul {
  padding: 0 0 0 3ch;
  margin: 0;
}
ol li:before { 
  content: counters(item, ".") ". ";
  counter-increment: item;
  font-weight: var(--font-weight-medium);
}

li {
  margin: 0;
  padding: 0;
}

li::marker {
  line-height: 0;
}

::-webkit-scrollbar {
    height: var(--line-height);
}

input, button, textarea {
  border: var(--border-thickness) solid var(--text-color);
  padding: 
    calc(var(--line-height) / 2 - var(--border-thickness))
    calc(1ch - var(--border-thickness));
  margin: 0;
  font: inherit;
  font-weight: inherit;
  height: calc(var(--line-height) * 2);
  width: auto;
  overflow: visible;
  background: var(--background-color);
  color: var(--text-color);
  line-height: normal;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
}

input[type=checkbox] {
  display: inline-grid;
  place-content: center;
  vertical-align: top;
  width: 2ch;
  height: var(--line-height);
  cursor: pointer;
}
input[type=checkbox]:checked:before {
  content: "";
  width: 1ch;
  height: calc(var(--line-height) / 2);
  background: var(--text-color);
}

button:focus, input:focus {
  --border-thickness: 3px;
  outline: none;
}

input {
  width: calc(round(down, 100%, 1ch));
}
::placeholder {
  color: var(--text-color-alt);
  opacity: 1;
}
::-ms-input-placeholder {
  color: var(--text-color-alt);
}
button::-moz-focus-inner {
  padding: 0;
  border: 0
}

button {
  text-transform: uppercase;
  font-weight: var(--font-weight-medium);
  cursor: pointer;
}

button:hover {
  background: var(--background-color-alt);
}
button:active {
  transform: translate(2px, 2px);
}

label {
  display: block;
  width: calc(round(down, 100%, 1ch));
  height: auto;
  line-height: var(--line-height);
  font-weight: var(--font-weight-medium);
  margin: 0;
}

label input {
  width: 100%;
}

.tree, .tree ul {
  position: relative;
  padding-left: 0;
  list-style-type: none;
  line-height: var(--line-height);
}
.tree ul {
  margin: 0;
}
.tree ul li {
  position: relative;
  padding-left: 1.5ch;
  margin-left: 1.5ch;
  border-left: var(--border-thickness) solid var(--text-color);
}
.tree ul li:before {
  position: absolute;
  display: block;
  top: calc(var(--line-height) / 2);
  left: 0;
  content: "";
  width: 1ch;
  border-bottom: var(--border-thickness) solid var(--text-color);
}
.tree ul li:last-child {
  border-left: none;
}
.tree ul li:last-child:after {
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  content: "";
  height: calc(var(--line-height) / 2);
  border-left: var(--border-thickness) solid var(--text-color);
}

.grid {
  --grid-cells: 0;
  display: flex;
  gap: 1ch;
  width: calc(round(down, 100%, (1ch * var(--grid-cells)) - (1ch * var(--grid-cells) - 1)));
  margin-bottom: var(--line-height);
}

.grid > *,
.grid > input {
  flex: 0 0 calc(round(down, (100% - (1ch * (var(--grid-cells) - 1))) / var(--grid-cells), 1ch));
}
.grid:has(> :last-child:nth-child(1)) { --grid-cells: 1; }
.grid:has(> :last-child:nth-child(2)) { --grid-cells: 2; }
.grid:has(> :last-child:nth-child(3)) { --grid-cells: 3; }
.grid:has(> :last-child:nth-child(4)) { --grid-cells: 4; }
.grid:has(> :last-child:nth-child(5)) { --grid-cells: 5; }
.grid:has(> :last-child:nth-child(6)) { --grid-cells: 6; }
.grid:has(> :last-child:nth-child(7)) { --grid-cells: 7; }
.grid:has(> :last-child:nth-child(8)) { --grid-cells: 8; }
.grid:has(> :last-child:nth-child(9)) { --grid-cells: 9; }

/* DEBUG UTILITIES */

.debug .debug-grid {
  --color: color-mix(in srgb, var(--text-color) 10%, var(--background-color) 90%);
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  background-image:
    repeating-linear-gradient(var(--color) 0 1px, transparent 1px 100%),
    repeating-linear-gradient(90deg, var(--color) 0 1px, transparent 1px 100%);
  background-size: 1ch var(--line-height);
  margin: 0;
}

.debug .off-grid {
  background: rgba(255, 0, 0, 0.1);
}

.debug-toggle-label {
  text-align: right;
}

.profile-image-container {
  width: 300px;
  height: 300px;
  display: inline-block;
  position: relative;
  overflow: hidden; /* Ensure anything outside the container is hidden */
  background-image: url('profile-image.png'); /* Initial background image */
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  transition: transform 0.5s ease-in-out; /* Smooth zoom transition */
}

.profile-image-container::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url('new-image.png'); /* The hover image */
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  opacity: 0; /* Initially invisible */
  transition: opacity 0.5s ease-in-out; /* Smooth transition for opacity */
}

.profile-image-container:hover::after {
  opacity: 1; /* Fade in the hover image */
}

.profile-image-container:hover {
  transform: scale(1.1); /* Zoom in effect */
}


nav {
  display: flex;
  justify-content: center;  /* Centers items horizontally */
  align-items: center;      /* Centers items vertically */
  padding: 10px 0;
  width: 100%;
}

nav ul {
  display: flex;            /* Aligns list items horizontally */
  justify-content: center;  /* Centers list items */
  padding: 0;
  margin: 0;
  list-style-type: none;    /* Removes bullets */
}

nav li {
  margin: 0 20px;           /* Adds space between items */
}

nav i {
  font-size: 24px;          /* Adjusts the size of the icons */
  color: #edecec;              /* Sets the icon color */
  transition: transform 0.3s ease, color 0.3s ease;  /* Smooth transition for size and color */
}

nav i:hover {
  color: #ffffff;           /* Changes icon color on hover */
  transform: scale(1.2);     /* Enlarges the icon */
}




/* General style for all anchor tags */
a {
  text-decoration: none; /* Remove underline */
}

/* Optional: icon size and spacing */
a i {
  font-size: 24px; /* Set the icon size */
  margin: 0 8px;  /* Adjust space between icons */
}

/* Ensure no underline on hover */
a:hover {
  text-decoration: none;
}

/* Specific class styling for CV link */
.cv-link {
  text-decoration: none;
}

/* Optional: Styling for hover/focus on individual links */
a:focus, a:hover {
  text-decoration: none;
}



/* Skills grid: keep the same grid layout, just target the text centering */
.skills-grid {
  display: flex;
  gap: 1ch;  /* Evenly spaced between items */
  margin-bottom: var(--line-height);
}

.skills-grid input {
  text-align: center;  /* Center the text inside each input */
  width: 100%;         /* Make inputs expand to fill the available space evenly */
  box-sizing: border-box;  /* Ensure padding and border are included in width */
}

/* Typewriter effect container */
.typewriter {
  display: inline-block;
  white-space: nowrap;
  overflow: hidden;
  width: 100%;
  text-align: left; /* Ensure it starts left */
  border-right: 0.1em solid var(--text-color); /* Blinking cursor effect */
  animation: typing 2s steps(20) 1s normal both, blink 0.75s step-end infinite;
}

/* Adjust the typing animation */
@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 40%;
  }
}

@keyframes blink {
  50% {
    border-color: transparent;
  }
}

/* Video Section Updates */
#video-gallery h2 {
  border-bottom: var(--border-thickness) solid var(--text-color);
  padding-bottom: calc(var(--line-height) / 2);
  margin-bottom: calc(var(--line-height) * 2);
}

.video-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  grid-auto-rows: minmax(300px, auto); /* Match blog grid setting */
  gap: calc(var(--line-height) * 2);
  margin: calc(var(--line-height) * 2) 0;
  align-items: stretch; /* Uniform height */
}

.video-item {
   margin: 0; /* Ensure no margin is causing the card to float */
  padding: 1rem; /* Adjust padding as needed */
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  border: var(--border-thickness) solid var(--text-color);
  padding: var(--line-height);
  transition: transform 0.3s ease;
  height: 100%;
}

.video-item iframe {
  width: 100%;
  flex: 1; /* Take available space */
  min-height: 200px;
  border: none;
}

.video-item p {
  margin: calc(var(--line-height) * 0.5) 0 0;
  font-weight: var(--font-weight-medium);
  text-align: center;
}

/* Responsive Adjustments */
@media (max-width: 768px) {
  .video-grid {
    grid-template-columns: 1fr;
    grid-auto-rows: auto;
  }
  
  .video-item iframe {
    min-height: 180px;
  }
}

/*Blog section*/
#blogs-section h1 {
  border-bottom: var(--border-thickness) solid var(--text-color);
  padding-bottom: calc(var(--line-height) / 2);
  margin-bottom: calc(var(--line-height) * 2);
}

.blog-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: calc(var(--line-height) * 2);
  margin-top: calc(var(--line-height) * 2);
  grid-auto-rows: minmax(300px, auto); /* Set a minimum row height */
}

.blog-card {
  margin: 0; /* Ensure no margin is causing the card to float */
  padding: 1rem; /* Adjust padding as needed */
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  border: var(--border-thickness) solid var(--text-color);
  padding: var(--line-height);
  transition: transform 0.3s ease;
  height: 100%;
}
.blog-card:hover {
  transform: translateY(-4px);
}
.blog-link {
  display: block;
  text-decoration: none;
}
.card-header {
  margin-bottom: var(--line-height);
  flex: 1; /* Allow the header to grow and take up available space */
}
.card-header h2 {
  font-size: 1.25rem;
  margin: 0 0 calc(var(--line-height) / 2);
  line-height: 1.4;
  overflow: hidden; /* Prevent text from overflowing */
  text-overflow: ellipsis; /* Add ellipsis for overflow text */
  display: -webkit-box;
  -webkit-line-clamp: 2; /* Limit to 2 lines */
  -webkit-box-orient: vertical;
}

.excerpt {
  margin: var(--line-height) 0;
  line-height: 1.4;
  flex: 1; /* Allow the excerpt to grow and take up available space */
}

.tech-tags span {
  background: var(--background-color-alt);
  padding: 0.25ch 1ch;
  font-size: 0.8rem;
  border: var(--border-thickness) solid var(--text-color);
  text-transform: uppercase;
}

/* Pagination Styles */
.pagination {
  display: flex;
  justify-content: center;
  gap: 2ch;
  margin-top: calc(var(--line-height) * 3);
}

.pagination a {
  padding: 0.5ch 2ch;
  border: var(--border-thickness) solid var(--text-color);
  text-transform: uppercase;
}

.pagination a:hover {
  background: var(--background-color-alt);
}

/* Responsive Adjustments */
@media (max-width: 768px) {
  .blog-grid {
      grid-template-columns: 1fr;
  }
  
  .blog-card {
      padding: calc(var(--line-height) / 2);
  }
}

@media (prefers-color-scheme: dark) {
  .tech-tags span {
      background: var(--background-color);
  }
}

.blog-card a {
  display: block;
  color: inherit;
  text-decoration: none;
}


code {
  display: block;
  background-color: #f4f4f4;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  font-family: 'Courier New', Courier, monospace;
  color: #333;
  overflow-x: auto;
  white-space: pre-wrap;
  word-wrap: break-word;
}




/* Dark theme styles */
.code-explanation {
  margin: 2rem 0;
  padding: 1rem;
  background: #1a1a1a;
  border-left: 4px solid #2ecc71;
  border-radius: 4px;
  color: #e0e0e0;
}

.explanation-note {
  padding: 1rem;
  margin-top: 1rem;
  background: #2d2d2d;
  border-radius: 4px;
  border: 1px solid #3d3d3d;
  color: #cccccc;
}

.explanation-note strong {
  color: #2ecc71;
}

pre code {
  display: block;
  padding: 1rem;
  background: #121212 !important;
  border-radius: 4px;
  overflow-x: auto;
  margin: 1rem 0;
  color: #dcdcdc;
  border: 1px solid #2d2d2d;
}

/* Syntax highlighting colors */
.token.keyword { color: #569cd6; }
.token.function { color: #dcdcaa; }
.token.string { color: #ce9178; }
.token.comment { color: #6a9955; }
.token.punctuation { color: #d4d4d4; }




/* Fix transform typo and add initial opacity */
#preloader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
  background: white;
  opacity: 1; /* Add this */
}

.loading-text {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* Fixed typo (removed extra '-') */
  color: white;
  font-size: 3em;
  opacity: 0;
  transition: opacity 0.5s ease;
  pointer-events: none;
}

/* Add this to ensure main content is visible after transition */
.content-visible {
  visibility: visible !important;
  opacity: 1 !important;
}

/* Preloader Styles */
#preloader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
  background: white;
  opacity: 1;
  transition: opacity 0.5s ease;
}

.black-phase {
  background: black !important;
  transition: none !important;
}

.fade-out {
  opacity: 0;
}

.loading-text {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 3em;
  opacity: 0;
  transition: opacity 0.5s ease;
  pointer-events: none;
}

.show { opacity: 1; }

#main-content {
  opacity: 0;  /* Add this */
  display: none;
  transition: opacity 1s ease;  /* Add transition property */
}

.content-visible {
  display: block;
  opacity: 1;  /* Ensure this is present */
  /* Remove the animation and use transition instead */
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

#kanji-container {
  white-space: normal; /* Reset this */
  word-break: keep-all; /* Prevent breaking within words/kanji */
  overflow-wrap: anywhere; /* Only break when absolutely necessary */
}

/* Add commas via CSS instead of HTML */
.kanji-word:not(:last-child)::after {
  content: ",";
  margin-left: -0.3em; /* Pull comma closer to kanji */
  word-spacing: normal; /* Reset spacing for comma */
}


.kanji-word {
  cursor: pointer;
  position: relative;
  color: #ffffff;
  font-weight: bold;
  white-space: nowrap; /* Prevent individual kanji from breaking */
  display: inline-block;
}

.tooltip {
  position: absolute;
  background: #333;
  color: #fff;
  padding: 5px 10px;
  border-radius: 6px;
  font-size: 14px;
  white-space: nowrap;
  top: -40px; /* moved slightly higher */
  left: 50%;
  transform: translateX(-50%) scale(1); /* lock scale */
  transform-origin: center;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.2s ease-in-out;
  z-index: 999;
  pointer-events: none; /* optional: avoid hover conflict */
  will-change: opacity, transform; /* improve perf */
}

.tooltip::after {
  content: "";
  position: absolute;
  bottom: -5px;
  left: 50%;
  transform: translateX(-50%);
  border-width: 5px;
  border-style: solid;
  border-color: #333 transparent transparent transparent;
}

.kanji-word.active .tooltip {
  opacity: 1;
  visibility: visible;
}


@media (max-width: 768px) {
  #kanji-container {
      font-size: 1.2em;
      padding: 10px;
  }
}

/* Custom Select Styles - matches your theme */
.custom-select {
  position: relative;
  width: 200px;
  font-family: var(--font-family);
  font-weight: var(--font-weight-medium);
}

.select-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: transparent;
  border: none;
  border-bottom: 2px solid var(--text-color);
  color: var(--text-color);
  padding: 4px 8px;
  cursor: pointer;
  transition: border-color 0.3s ease-in-out;
}

.select-header:hover {
  border-bottom-color: var(--text-color-alt);
}

.dropdown-arrow {
  font-size: 0.6em;
  margin-left: 8px;
  transition: transform 0.3s ease;
}

.select-options {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background: var(--background-color);
  border: 1px solid var(--text-color-alt);
  border-radius: 4px;
  margin-top: 4px;
  max-height: 0;
  overflow: hidden;
  opacity: 0;
  transform: translateY(-10px);
  transition: all 0.3s ease-in-out;
  z-index: 1000;
}

.select-options.active {
  max-height: 250px;
  opacity: 1;
  transform: translateY(0);
}

.option {
  padding: 8px;
  color: var(--text-color);
  transition: all 0.2s ease;
}

.option:hover {
  background: rgba(255, 255, 255, 0.1);
  transform: translateX(4px);
}

/* Rotate arrow when active */
.custom-select.active .dropdown-arrow {
  transform: rotate(180deg);
}

.email-link {
  color: #2d87d2; /* Pleasant blue color */
  text-decoration: none;
  position: relative;
  transition: color 0.3s ease;
  cursor: pointer;
}

/* Animated underline effect */
.email-link::after {
  content: '';
  position: absolute;
  width: 0;
  height: 2px;
  bottom: 0;
  left: 0;
  background-color: #ffffff;
  transition: width 0.3s ease;
}

/* Hover effects */
.email-link:hover {
  color: grey; /* Darker shade on hover */
}

.email-link:hover::after {
  width: 100%;
}

.kanji-word.active-reading {
  background-color: yellow;
  border-radius: 4px;
  transition: background-color 0.3s;
}
